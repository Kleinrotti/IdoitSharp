<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdoitSharp</name>
    </assembly>
    <members>
        <member name="M:IdoitSharp.CMDB.Category.IdoitCategoryInstance`1.Read">
            <summary>
            Reads the given object. Property ObjectId has to be set.
            </summary>
            <returns>A list of that generic data type</returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Category.IdoitCategoryInstance`1.Create">
            <summary>
            Create the given object. Property ObjectId and ObjectRequest has to be set.
            </summary>
            <returns>The id of that newly created object.</returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Category.IdoitCategoryInstance`1.Update">
            <summary>
            Updates the given object. Property ObjectId and RequestObject has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Category.IdoitCategoryInstance`1.QuickPurge">
            <summary>
            QuickPurge the given object entry. Property ObjectId and CateId has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Category.IdoitCategoryInstance`1.Purge">
            <summary>
            Purge the given object entry. Property ObjectId and CateId has to be set.
            </summary>
        </member>
        <member name="T:IdoitSharp.CMDB.Category.IdoitMvcInstance`1">
            <summary>
            Provides methods for MultiValue category objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:IdoitSharp.CMDB.Category.IdoitMvcInstance`1.#ctor(IdoitSharp.IdoitClient)">
            <summary>
            Initializes a new instance of the IdoitMvcInstance class.
            </summary>
            <param name="myClient"></param>
        </member>
        <member name="M:IdoitSharp.CMDB.Category.IdoitMvcInstance`1.Delete">
            <summary>
            Deletes a category object. Property ObjectId and CateId has to be set.<br></br>
            Only category entries marked as archived, can be marked as deleted.<br></br>
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Category.IdoitMvcInstance`1.Recycle">
            <summary>
            Recycle a category object. Property ObjectId and CateId has to be set. <br></br>
            Only category entries marked as archived or deleted can be recycled.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Category.IdoitMvcInstance`1.Archive">
            <summary>
            Archive a category object. Property ObjectId and CateId has to be set. <br></br>
            Only category entries marked as normal can be marked as archived.
            </summary>
        </member>
        <member name="T:IdoitSharp.CMDB.Category.IdoitSvcInstance`1">
            <summary>
            Provides methods for SingleValue category objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:IdoitSharp.CMDB.Dialog.IdoitDialogInstance.Property">
            <summary>
            Attribute in category, e.g manufacturer.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Dialog.IdoitDialogInstance.EntryId">
            <summary>
            Entry identifier.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Dialog.IdoitDialogInstance.Category">
            <summary>
            Category constant. Found in <see cref="T:IdoitSharp.Contants.IdoitGlobalCategories"/>.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Dialog.IdoitDialogInstance.Create">
            <summary>
            Create an idoit dialog object. Property Value, Property and Category has to be set.
            </summary>
            <returns>The id of the created object</returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Dialog.IdoitDialogInstance.Update">
            <summary>
            Update an idoit dialog object. Property CateId, Value, Property and Category has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Dialog.IdoitDialogInstance.Delete">
            <summary>
            Delete an idoit dialog object. Property CateId, Property and Category has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Dialog.IdoitDialogInstance.Read">
            <summary>
            Read an idoit dialog object. Property Category and Property has to be set.
            </summary>
            <returns>A <see cref="T:IdoitSharp.CMDB.Dialog.DialogResult"/> array, which contains all found objects.</returns>
        </member>
        <member name="T:IdoitSharp.CMDB.IdoitOrderBy">
            <summary>
            Use the extension method GetStringValue for the actual values!
            </summary>
        </member>
        <member name="T:IdoitSharp.CMDB.IdoitResponse">
            <summary>
            Represents a response from Idoit when executing actions.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.IdoitResponse.id">
            <summary>
            Id of the modified or created idoit object.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.IdoitResponse.message">
            <summary>
            Response message from idoit
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.IdoitResponse.success">
            <summary>
            Requested action was successfull
            </summary>
        </member>
        <member name="T:IdoitSharp.CMDB.IdoitSort">
            <summary>
            Use the extension method GetStringValue for the actual values!
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Impact.IdoitImpactInstance.Read">
            <summary>
            Perform an impact analysis for a specific object by its relation type identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Logbook.IdoitLogbookInstance.Read">
            <summary>
            Read idoit logbook entries.
            </summary>
            <returns>An <see cref="T:IdoitSharp.CMDB.Logbook.IdoitLogbookResponse"/> array.</returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Logbook.IdoitLogbookInstance.Read(System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Read idoit logbook entries.
            </summary>
            <param name="since">List only entries since a specific date.</param>
            <param name="limit">Limit number of entries.</param>
            <returns>An <see cref="T:IdoitSharp.CMDB.Logbook.IdoitLogbookResponse"/> array.</returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Logbook.IdoitLogbookInstance.Read(System.Int32,System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Read idoit logbook entries for a specific object.
            </summary>
            <param name="objectId">Object identifier.</param>
            <param name="since">List only entries since a specific date.</param>
            <param name="limit">Limit number of entries.</param>
            <returns>An <see cref="T:IdoitSharp.CMDB.Logbook.IdoitLogbookResponse"/> array.</returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Logbook.IdoitLogbookInstance.Create">
            <summary>
            Create an idoit logbook entry for a specific object. Property ObjectId and Message has to be set. Description is optional.
            </summary>
            <returns>The id of the created entry.</returns>
        </member>
        <member name="T:IdoitSharp.CMDB.Objects.IdoitObjectsFilter">
            <summary>
            Provides possible values to filter an idoit request.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsFilter.ids">
            <summary>
            Filter by multiple ids.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsFilter.type">
            <summary>
            Filter by Objecttype ID from table isys_obj_type.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsFilter.title">
            <summary>
            Filter by name of the object.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsFilter.type_title">
            <summary>
            Filter by name of the objecttype.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsFilter.sysid">
            <summary>
            Filter by SYS-ID.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsFilter.first_name">
            <summary>
            Filter by first name of a person.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsFilter.last_name">
            <summary>
            Filter by last name of a person.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsFilter.email">
            <summary>
            Filter by email adress.
            </summary>
        </member>
        <member name="T:IdoitSharp.CMDB.Objects.IdoitObjectsInstance">
            <summary>
            Provides methods to read multiple objects from idoit. Filtering is also supported.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsInstance.Filter">
            <summary>
            Advanced filtering for the searched result.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsInstance.OrderBy">
            <summary>
            Order the searched result.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsInstance.Sort">
            <summary>
            Sort the searched result.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsInstance.Limit">
            <summary>
            Limit the searched result. Where to start and number of elements, i.e. 0 or 0,10.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Objects.IdoitObjectsInstance.Raw">
            <summary>
            Formatts the searched result as raw SQL.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Objects.IdoitObjectsInstance.Read">
            <summary>
            Read an idoit object. Set Filter, OrderBy, Sort or Limit Property to filter your result.
            </summary>
            <returns>An <see cref="T:IdoitSharp.CMDB.Objects.IdoitObjectsResult"/> array with all found objects.</returns>
        </member>
        <member name="T:IdoitSharp.CMDB.Object.IdoitObjectInstance">
            <summary>
            Represents an IdoitObject which can be created, updated, read and archived.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Object.IdoitObjectInstance.Type">
            <summary>
            Type of the object, defined in IdoitObjectTypes.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Object.IdoitObjectInstance.Purpose">
            <summary>
            Type of the object, defined in IdoitCategory.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Object.IdoitObjectInstance.CmdbStatus">
            <summary>
            Type of the object. Optional when creating a new object.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Object.IdoitObjectInstance.Description">
            <summary>
            Description of the object. Optional when creating a new object.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Object.IdoitObjectInstance.Create">
            <summary>
            Create a new object. Property Type and Value has to be set.
            </summary>
            <returns>The id of the created object</returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Object.IdoitObjectInstance.Update">
            <summary>
            Update the title of an object. Property ObjectId and Value has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Object.IdoitObjectInstance.Delete">
            <summary>
            Delete the given object. Property ObjectId has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Object.IdoitObjectInstance.Purge">
            <summary>
            Purge the given object. This will remove it completely from the database. Property ObjectId has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Object.IdoitObjectInstance.Archive">
            <summary>
            Archive the given object. Property ObjectId has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Object.IdoitObjectInstance.Read">
            <summary>
            Read the given object. Property ObjectId has to be set.
            </summary>
            <returns>An <see cref="T:IdoitSharp.CMDB.Object.IdoitObjectResult"/></returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Object.IdoitObjectInstance.MarkAsTemplate">
            <summary>
            Set object state as template. Property ObjectId has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Object.IdoitObjectInstance.MarkAsMassChangeTemplate">
            <summary>
            Set object state as mass change template. Property ObjectId has to be set.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Object.IdoitObjectInstance.Recycle">
            <summary>
            Recycle an idoit object. Property ObjectId has to be set.
            </summary>
        </member>
        <member name="T:IdoitSharp.CMDB.Object.IdoitObjectResult">
            <summary>
            Represents an object which will be received when reading an object from idoit.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Object.IdoitObjectTypesFilter.id">
            <summary>
            Filter by single id.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Object.IdoitObjectTypesFilter.titles">
            <summary>
            Filter by multiple titles.
            </summary>
        </member>
        <member name="P:IdoitSharp.CMDB.Object.IdoitObjectTypesFilter.enabled">
            <summary>
            Filter if object type is enabled in the GUI.
            </summary>
        </member>
        <member name="T:IdoitSharp.CMDB.Reports.IdoitReportsInstance">
            <summary>
            Provides methods for Reports.
            </summary>
        </member>
        <member name="M:IdoitSharp.CMDB.Reports.IdoitReportsInstance.Read">
            <summary>
            Read all reports.
            </summary>
            <returns>An <see cref="T:IdoitSharp.CMDB.Reports.IdoitReportsResponse"/> array.</returns>
        </member>
        <member name="M:IdoitSharp.CMDB.Reports.IdoitReportsInstance.Read(System.Int32)">
            <summary>
            Read a specific report.
            </summary>
            <param name="objId"></param>
            <returns></returns>
        </member>
        <member name="T:IdoitSharp.Contants.IdoitCmdbStatus">
            <summary>
            CMDB states which idoit provides.
            </summary>
        </member>
        <member name="T:IdoitSharp.Contants.IdoitGlobalCategories">
            <summary>
            Represents global categories which idoit provides.
            </summary>
        </member>
        <member name="T:IdoitSharp.Contants.IdoitObjectTypes">
            <summary>
            Represents object types which idoit provides.
            </summary>
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SERVICE">
            System Service
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.APPLICATION">
            Application
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.BUILDING">
            Building
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.ENCLOSURE">
            Rack
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SERVER">
            Server
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SYSTEM_SERVICE">
            SystemService
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SWITCH">
            Switch
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.ROUTER">
            Router
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.FC_SWITCH">
            Fc Switch
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SAN">
            Storage System
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.CLIENT">
            Client
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.PRINTER">
            Printer
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.AIR_CONDITION_SYSTEM">
            Air Condition System
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.WAN">
            Wan
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.EMERGENCY_PLAN">
            Emergency Plan
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.KVM_SWITCH">
            Kvm Switch
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.MONITOR">
            Monitor
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.APPLIANCE">
            Appliance
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.TELEPHONE_SYSTEM">
            Telephone System
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.PRINTBOX">
            Printbox
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.ROOM">
            Room
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.ACCESS_POINT">
            Wireless Access Point
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.MAINTENANCE">
            Contract
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.FILE">
            File
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.LOCATION_GENERIC">
            Generic Location
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.LAYER3_NET">
            Layer 3-net
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.CELL_PHONE_CONTRACT">
            Cellular Phone
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.LICENCE">
            Licenses
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.CONTAINER">
            Container
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.OPERATING_SYSTEM">
            Operating System
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.GROUP">
            Object Group
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.GENERIC_TEMPLATE">
            Generic Template
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.PHONE">
            Phone
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.HOST">
            Host
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.CABLE">
            Cable
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.CONVERTER">
            Converter
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.WIRING_SYSTEM">
            Wiring System
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.PATCH_PANEL">
            Patch Panel
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.AMPLIFIER">
            Amplifier
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.IT_SERVICE">
            Service
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.ESC">
            Electric Power Company
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.EPS">
            Emergency Power Supply
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.DISTRIBUTION_BOX">
            Distribution Box
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.PDU">
            Power Distribution Unit
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.UPS">
            Uninterruptible Power Supply
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SAN_ZONING">
            San Zoning
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.ORGANIZATION">
            Organization
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.PERSON">
            Persons
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.PERSON_GROUP">
            Person Groups
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.CLUSTER">
            Cluster
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.CLUSTER_SERVICE">
            Cluster Services
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.VIRTUAL_CLIENT">
            Virtual Client
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.VIRTUAL_HOST">
            Virtual Host
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.VIRTUAL_SERVER">
            Virtual Server
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.RELATION">
            Relation
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.DBMS">
            Dbms
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.DATABASE_SCHEMA">
            Database Schema
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.PARALLEL_RELATION">
            Parallel Relations
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.REPLICATION">
            Replication Object
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.DATABASE_INSTANCE">
            Database Instance
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.MIDDLEWARE">
            Middleware
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SOA_STACK">
            Soa Stack
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.KRYPTO_CARD">
            Crypto Card
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SIM_CARD">
            Sim Card
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.LAYER2_NET">
            Layer 2 Net
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.WORKSTATION">
            Workplace
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.MIGRATION_OBJECT">
            Migration Objects
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SWITCH_CHASSIS">
            Switch Chassis
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.BLADE_CHASSIS">
            Blade Chassis
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.BLADE_SERVER">
            Blade Server
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.VOIP_PHONE">
            Voip Telephone
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.SUPERNET">
            Supernet
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.NAGIOS_SERVICE">
            Nagios Service
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.NAGIOS_SERVICE_TPL">
            Nagios Service-template
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.NAGIOS_HOST_TPL">
            Nagios Host-template
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.INFORMATION_DOMAIN">
            Information Domain
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.VEHICLE">
            Vehicle
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.AIRCRAFT">
            Aircraft
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.CLUSTER_VRRP_HSRP">
            Vrrp/hsrp Cluster
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.COUNTRY">
            Country
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.CITY">
            City
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.RM_CONTROLLER">
            Remote Management Controller
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.VRRP">
            VRRP
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.STACKING">
            Stacking
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.C__CMDB__OBJTYPE__CABLE_TRAY">
            Cable Tray
        </member>
        <member name="F:IdoitSharp.Contants.IdoitObjectTypes.C__CMDB__OBJTYPE__CONDUIT">
            Conduit
        </member>
        <member name="T:IdoitSharp.Contants.IdoitSpecificCategories">
            <summary>
            Represents specific categories which idoit provides.
            </summary>
        </member>
        <member name="T:IdoitSharp.IdoitClient">
            <summary>
            Represents an Idoit API client.
            </summary>
        </member>
        <member name="P:IdoitSharp.IdoitClient.Url">
            <summary>
            Idoit server Url
            </summary>
        </member>
        <member name="P:IdoitSharp.IdoitClient.Apikey">
            <summary>
            Idoit API key
            </summary>
        </member>
        <member name="P:IdoitSharp.IdoitClient.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="M:IdoitSharp.IdoitClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdoitSharp.IdoitClient"/> class.
            </summary>
            <param name="url"></param>
            <param name="apikey"></param>
            <param name="language"></param>
        </member>
        <member name="M:IdoitSharp.IdoitClient.GetClient">
            <summary>
            Create an authenticated HttpClient
            </summary>
            <returns>A new <see cref="T:System.Net.Http.HttpClient"/></returns>
        </member>
        <member name="T:IdoitSharp.IdoitInstanceBase">
            <summary>
            Reprents a base class for the Idoit API.
            </summary>
        </member>
        <member name="T:IdoitSharp.Idoit.IdoitConstantsInstance">
            <summary>
            Provides methods to retrieve idoits constant objects. Categories, RecordStates, ObjectTypes, RelationTypes and StaticObjects.
            </summary>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitConstantsInstance.ReadGlobalCategories">
            <summary>
            Read all global idoit categories.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> with all categories.</returns>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitConstantsInstance.ReadSpecificCategories">
            <summary>
            Read all specific idoit categories.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> with all specific idoit categories.</returns>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitConstantsInstance.ReadObjectTypes">
            <summary>
            Read all idiot object types.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> with all idoit object types.</returns>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitConstantsInstance.ReadRecordStates">
            <summary>
            Read all idoit record states.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> with all idoit record states.</returns>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitConstantsInstance.ReadRelationTypes">
            <summary>
            Read all idoit relation types.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> with all idoi relation types.</returns>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitConstantsInstance.ReadStaticObjects">
            <summary>
            Read all idoit static objects.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> with all static idoit objects.</returns>
        </member>
        <member name="T:IdoitSharp.Idoit.IdoitInstance">
            <summary>
            Provides methods to retrieve the idoit version and search for objects.
            </summary>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitInstance.Version">
            <summary>
            Retrieve the current idoit version.
            </summary>
            <returns>A <see cref="T:IdoitSharp.Idoit.IdoitVersionResponse"/></returns>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitInstance.Search(System.String)">
            <summary>
            Search for a specific keyword.
            </summary>
            <param name="keyword"></param>
            <returns>A <see cref="T:IdoitSharp.Idoit.IdoitSearchResponse"/>[] with all objects found.</returns>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitInstance.Addons">
            <summary>
            Read information about installed addons.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IdoitSharp.Idoit.IdoitInstance.License">
            <summary>
            Read license information.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IdoitSharp.Idoit.IdoitLoginResponse">
            <summary>
            Represents a response from idoit when logging in.
            </summary>
        </member>
        <member name="T:IdoitSharp.Idoit.IdoitLogoutResponse">
            <summary>
            Represents a response from idoit when logging out.
            </summary>
        </member>
        <member name="T:IdoitSharp.Idoit.IdoitSearchResponse">
            <summary>
            Represents a response from idoit when searching for objects.
            </summary>
        </member>
        <member name="T:IdoitSharp.IClient">
            <summary>
            Provides methods to connect to an idoit server.
            </summary>
        </member>
        <member name="M:IdoitSharp.IClient.Logout">
            <summary>
            Logout the current idoit session.
            </summary>
            <returns>An <see cref="T:IdoitSharp.Idoit.IdoitLogoutResponse"/></returns>
        </member>
        <member name="M:IdoitSharp.IClient.Login">
            <summary>
            Login to idoit to keep a session connected instead of creating new ones
            </summary>
            <returns>An <see cref="T:IdoitSharp.Idoit.IdoitLoginResponse"/></returns>
        </member>
        <member name="M:IdoitSharp.IClient.GetConnection">
            <summary>
            Initialize a rpc connection.
            </summary>
            <returns>The current <see cref="T:Anemonis.JsonRpc.ServiceClient.JsonRpcClient"/></returns>
        </member>
        <member name="P:IdoitSharp.IClient.Parameters">
            <summary>
            Returns the current used connection parameters
            </summary>
        </member>
        <member name="P:IdoitSharp.IClient.Username">
            <summary>
            Idoit username
            </summary>
        </member>
        <member name="P:IdoitSharp.IClient.Password">
            <summary>
            Idoit user password
            </summary>
        </member>
        <member name="T:IdoitSharp.ICreatable">
            <summary>
            Provides logic to Create an idoit object.
            </summary>
        </member>
        <member name="P:IdoitSharp.IFilter.ids">
            <summary>
            Filter by multiple ids.
            </summary>
        </member>
        <member name="P:IdoitSharp.IFilter.title">
            <summary>
            Filter by name of the object.
            </summary>
        </member>
        <member name="M:IdoitSharp.IFilter.GetObject">
            <summary>
            Returns the current object without null value properties.
            </summary>
            <returns></returns>
        </member>
        <member name="P:IdoitSharp.IInstance.Client">
            <summary>
            Returns the current <see cref="T:IdoitSharp.IdoitClient"/>
            </summary>
        </member>
        <member name="P:IdoitSharp.IInstance.Id">
            <summary>
            Returns the Id of the newly created or updated object.
            </summary>
        </member>
        <member name="P:IdoitSharp.IInstance.Category">
            <summary>
            Returns the unique identifier of the idoit category.
            </summary>
        </member>
        <member name="P:IdoitSharp.IInstance.Value">
            <summary>
            Value of the object.
            </summary>
        </member>
        <member name="T:IdoitSharp.StringValueAttribute">
            <summary>
            This attribute is used to represent a string value
            for a value in an enum.
            </summary>
        </member>
        <member name="P:IdoitSharp.StringValueAttribute.StringValue">
            <summary>
            Holds the stringvalue for a value in an enum.
            </summary>
        </member>
        <member name="M:IdoitSharp.StringValueAttribute.#ctor(System.String)">
            <summary>
            Constructor used to init a StringValue Attribute
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IdoitSharp.GetStringValueExtension.GetStringValue(System.Enum)">
            <summary>
            Will get the string value for a given enums value, this will
            only work if you assign the StringValue attribute to
            the items in your enum.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
    </members>
</doc>
